name: Autopopulation

on:
  pull_request:
    types: [closed]
    branches:
      - main
  push:
    branches:
      - main

jobs:
  sync-instances:
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full history to compare against the base branch
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Step 3: Get modified JSON-LD files
      - name: Get modified JSON-LD files
        id: get_modified_files
        run: |
          # Fetch the base branch for comparison
          git fetch origin $GITHUB_BASE_REF
          
          # Compare the changes between the PR branch and the base branch
          git diff --name-only --diff-filter=AM origin/$GITHUB_BASE_REF...HEAD | grep '\.jsonld$' > changed_files.txt || true
          
          declare -A seen_files
          declare -A modified_jsons
          
          # Check if there are any changed .jsonld files
          if [ -s changed_files.txt ]; then
            while IFS= read -r file; do
              FILE_MODULE=$(echo "$file" | cut -d'/' -f3-4)
              FILE_NAME=$(basename "$file")
              MODULE_NAME="$FILE_MODULE/$FILE_NAME"
              
              # Check there are no modifications across versions
              if [[ -z "${seen_files[$MODULE_NAME]}" ]]; then
                FILE_VERSION=$(echo "$file" | cut -d'/' -f2)
                seen_files[$MODULE_NAME]=1
                modified_jsons["$file"]="$FILE_VERSION"
              else
                echo "Ignoring file modified in different versions: $FILE_MODULE/$FILE_NAME"
              fi
            done < changed_files.txt
          fi
          
          if [ ${#modified_jsons[@]} -gt 0 ]; then
            MAIN_FOLDER="instances"

            for FILE in "${!modified_jsons[@]}"; do
              FILE_VERSION="${modified_jsons[$FILE]}"
              FILE_NAME=$(basename "$FILE")
              
              # Iterate over all other versions (excluding the one where the file was modified)
              for VERSION in $(ls "$MAIN_FOLDER"); do
                if [ "$VERSION" != "$FILE_VERSION" ]; then
                  TARGET_FILE="$MAIN_FOLDER/$VERSION/$FILE_MODULE/$FILE_NAME"
                  
                  # If the target file exists in the other version folder, sync the properties
                  if [ -f "$TARGET_FILE" ]; then
                    echo "Syncing properties from $FILE to $TARGET_FILE"
                    
                    # Run the Python syncing script
                    python .github/scripts/sync_instances.py "$FILE" "$TARGET_FILE"
                  fi
                fi
              done
            done
          
            # Commit changes if any JSON-LD files were modified
            git config --global user.name "openMINDS pipeline"
            git config --global user.email "openminds@ebrains.eu"
            git add $MAIN_FOLDER/**/*.jsonld
            git commit -m "Population of properties from modified instance files"
            git push origin HEAD:main
          else
            echo "No JSON-LD files modified."
          fi
        shell: bash